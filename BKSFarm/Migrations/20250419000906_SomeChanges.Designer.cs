// <auto-generated />
using System;
using BKSFarm.api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BKSFarm.api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250419000906_SomeChanges")]
    partial class SomeChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BKSFarm.api.Entities.Animal", b =>
                {
                    b.Property<Guid>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AnimalImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AnimalStage")
                        .HasColumnType("integer");

                    b.Property<string>("AnimalType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("DateCreate")
                        .HasColumnType("bigint");

                    b.Property<long>("DieTime")
                        .HasColumnType("bigint");

                    b.Property<long>("TimeToLvlUp")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("AnimalId");

                    b.HasIndex("UserId");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("BKSFarm.api.Entities.Egg", b =>
                {
                    b.Property<Guid>("EggId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EggImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EggName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("EggId");

                    b.HasIndex("UserId");

                    b.ToTable("Eggs");
                });

            modelBuilder.Entity("BKSFarm.api.Entities.Plant", b =>
                {
                    b.Property<Guid>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("DateCreate")
                        .HasColumnType("bigint");

                    b.Property<long>("DieTime")
                        .HasColumnType("bigint");

                    b.Property<string>("PlanType")
                        .HasColumnType("text");

                    b.Property<string>("PlantImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlantName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PlantStage")
                        .HasColumnType("integer");

                    b.Property<long>("TimeToLvlUp")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("PlantId");

                    b.HasIndex("UserId");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("BKSFarm.api.Entities.Seed", b =>
                {
                    b.Property<Guid>("SeedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("SeedImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SeedName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SeedId");

                    b.ToTable("Seeds");
                });

            modelBuilder.Entity("BKSFarm.api.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("FieldCount")
                        .HasColumnType("integer");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BKSFarm.api.Entities.UserSeed", b =>
                {
                    b.Property<Guid>("UserSeedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("SeedId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("UserSeedId");

                    b.HasIndex("SeedId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSeeds");
                });

            modelBuilder.Entity("BKSFarm.api.Entities.Animal", b =>
                {
                    b.HasOne("BKSFarm.api.Entities.User", "User")
                        .WithMany("Animals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BKSFarm.api.Entities.Egg", b =>
                {
                    b.HasOne("BKSFarm.api.Entities.User", "User")
                        .WithMany("Eggs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BKSFarm.api.Entities.Plant", b =>
                {
                    b.HasOne("BKSFarm.api.Entities.User", "User")
                        .WithMany("Plants")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BKSFarm.api.Entities.UserSeed", b =>
                {
                    b.HasOne("BKSFarm.api.Entities.Seed", "Seed")
                        .WithMany()
                        .HasForeignKey("SeedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BKSFarm.api.Entities.User", "User")
                        .WithMany("Seeds")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seed");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BKSFarm.api.Entities.User", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("Eggs");

                    b.Navigation("Plants");

                    b.Navigation("Seeds");
                });
#pragma warning restore 612, 618
        }
    }
}
